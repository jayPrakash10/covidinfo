https://rapidapi.com/api-sports/api/covid-193/

fetch("https://covid-193.p.rapidapi.com/countries", {
	"method": "GET",
	"headers": {
		"x-rapidapi-host": "covid-193.p.rapidapi.com",
		"x-rapidapi-key": "9fac8ddff4msh6c51c9544932063p11bcebjsnc419840dc79a"
	}
})
.then(response => {
	console.log(response);
})
.catch(err => {
	console.error(err);
});

fetch("https://covid-193.p.rapidapi.com/statistics", {
	"method": "GET",
	"headers": {
		"x-rapidapi-host": "covid-193.p.rapidapi.com",
		"x-rapidapi-key": "9fac8ddff4msh6c51c9544932063p11bcebjsnc419840dc79a"
	}
})
.then(response => 
    response.json() 
)
.then(data =>{
    console.log(data.response[102])
})
.catch(err => {
	console.error(err);
});

totalCases = totalCases + data.response[i].cases.total
totalDeath = totalDeath + data.response[i].deaths.total
totalRecovered = totalRecovered + data.response[i].cases.recovered

data.response[i].country
data.response[i].cases.total
data.response[i].cases.critical
data.response[i].cases.active
data.response[i].cases.recovered
data.response[i].deaths.total
parseInt(data.response[i].cases.new) -> sort

data.response[i].cases.1M_pop -> Sort
data.response[i].deaths.1M_pop -> Sort

function sort_1M_pop(key, arr){
    console.log(key);
    console.log(arr);
    if(key=='dpm'){
        for(let i=0; i<arr.length;i++){
        
            // console.log(arr[i].deaths['1M_pop'], typeof(arr[i].deaths['1M_pop']));
        
            for(let j=0; j<arr.length-i-1; j++){
                if(parseInt(arr[j].deaths['1M_pop']) < parseInt(arr[j+1].deaths['1M_pop'])){
                    let temp = arr[j]
                    arr[j]=arr[j+1]
                    arr[j+1]=temp
                }
            }
        }
    }
    else{
        for(let i=0; i<arr.length;i++)
            for(let j=0; j<arr.length-i-1; j++){
                if(parseInt(arr[j].cases['1M_pop']) < parseInt(arr[j+1].cases['1M_pop'])){
                    let temp = arr[j]
                    arr[j]=arr[j+1]
                    arr[j+1]=temp
                }
            }
    }
    console.log(arr);
}
    
    function filter(key){
        setOrder(key)
        sort_1M_pop(key, data)
    }
    
    useEffect(()=>{
        show()
    },[order])
    const [order,setOrder] = useState('default')
